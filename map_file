Archive member included because of file (symbol)

can.a(uart.o)                 main.o (UART_Send_String)

Memory Configuration

Name             Origin             Length             Attributes
Mem              0x00000000         0x04000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.startup        0x00010000        0xc
 startup.o(.text)
 .text          0x00010000        0xc startup.o
                0x00010000                reset

.text           0x0001000c       0x78
 *(.text)
 .text          0x0001000c       0x28 main.o
                0x0001000c                main
 .text          0x00010034       0x50 can.a(uart.o)
                0x00010034                UART_Send_String

.rodata         0x00010084       0x28
 .rodata        0x00010084       0x28 main.o

.glue_7         0x000100ac        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x000100ac        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x000100ac        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x000100ac        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x000100ac        0x0
 .iplt          0x00000000        0x0 startup.o

.rel.dyn        0x000100ac        0x0
 .rel.iplt      0x00000000        0x0 startup.o

.data           0x000100ac        0x4
 *(.data)
 .data          0x000100ac        0x0 startup.o
 .data          0x000100ac        0x4 main.o
                0x000100ac                str_buffer
 .data          0x000100b0        0x0 can.a(uart.o)

.igot.plt       0x000100b0        0x0
 .igot.plt      0x00000000        0x0 startup.o

.bss            0x000100b0        0x0
 *(.bss)
 .bss           0x000100b0        0x0 startup.o
 .bss           0x000100b0        0x0 main.o
 .bss           0x000100b0        0x0 can.a(uart.o)
 *(COMMON)
                0x000110b0                . = (. + 0x1000)
                0x000110b0                stack_top = .
LOAD startup.o
LOAD main.o
LOAD can.a
OUTPUT(executable.elf elf32-littlearm)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x22 startup.o
 .ARM.attributes
                0x00000022       0x32 main.o
 .ARM.attributes
                0x00000054       0x32 can.a(uart.o)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 can.a(uart.o)
